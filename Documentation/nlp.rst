G√©n√©rateur de Rapports NLP
==========================

.. currentmodule:: nlp_report_generator

.. autoclass:: NLPReportGenerator
   :members:

Aper√ßu
------

La classe ``NLPReportGenerator`` fournit une g√©n√©ration automatis√©e de rapports de surveillance avec des capacit√©s de traitement du langage naturel. Elle analyse les √©v√©nements de s√©curit√© et produit des r√©sum√©s quotidiens complets avec √©valuation des menaces et recommandations op√©rationnelles.

D√©marrage Rapide
----------------

.. code-block:: python

   from nlp_report_generator import NLPReportGenerator
   
   # Initialiser le g√©n√©rateur
   generator = NLPReportGenerator()
   
   # Enregistrer des √©v√©nements
   generator.log_event("alerte_securite", "Mouvement d√©tect√© en zone restreinte")
   generator.log_event("vol", "Incident de vol √† l'√©talage signal√©")
   
   # G√©n√©rer le rapport
   rapport = generator.generate_daily_summary()
   print(rapport)

Fonctionnalit√©s Principales
---------------------------

* **Classification Automatique des Menaces** : √âv√©nements cat√©goris√©s en risque √âlev√©/Moyen/Faible
* **Analyse de Motifs** : Identifie les heures de pointe et tendances d'activit√©
* **Rapports en Langage Naturel** : R√©sum√©s lisibles avec insights actionnables
* **Surveillance des Foules** : Gestion sp√©ciale des √©v√©nements li√©s aux foules
* **Recommandations Contextuelles** : Suggestions de s√©curit√© bas√©es sur les motifs d'√©v√©nements

R√©f√©rence API
-------------

M√©thodes Principales
~~~~~~~~~~~~~~~~~~~~

.. method:: log_event(event_type, details, timestamp=None)

   Enregistre les √©v√©nements de surveillance pour la g√©n√©ration de rapports.
   
   :param str event_type: Cat√©gorie de l'√©v√©nement
   :param str details: Description de l'√©v√©nement
   :param datetime timestamp: Horodatage optionnel (par d√©faut maintenant)

.. method:: generate_daily_summary(target_date=None)

   G√©n√®re un rapport de surveillance quotidien complet.
   
   :param str target_date: Date au format AAAA-MM-JJ (par d√©faut aujourd'hui)
   :returns: Cha√Æne de rapport format√©e
   :rtype: str

Classification des Menaces
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Les √©v√©nements sont automatiquement classifi√©s en trois niveaux de menace :

* **Priorit√© √âlev√©e** üî¥ : tir, agression, bagarre, abus, explosion, incendie criminel
* **Priorit√© Moyenne** üü° : vol qualifi√©, cambriolage, vol, vol √† l'√©talage, vandalisme
* **Priorit√© Faible** üü¢ : Tous les autres √©v√©nements

Structure du Rapport
--------------------

Les rapports g√©n√©r√©s incluent :

1. **√âvaluation des Menaces** - Niveau de risque cod√© par couleur
2. **R√©sum√© Ex√©cutif** - Vue d'ensemble de la situation
3. **M√©triques Op√©rationnelles** - Statistiques d'activit√©
4. **Journal des √âv√©nements Critiques** - Incidents prioritaires
5. **Recommandations** - Conseils de s√©curit√© actionnables

Exemple de Sortie
-----------------

.. code-block:: text

   üìä RAPPORT DE SURVEILLANCE QUOTIDIEN - 2024-12-15
   ==================================================
   
   üéØ √âVALUATION DES MENACES : üü° RISQUE MOYEN
   üìù R√âSUM√â : Pr√©occupations de s√©curit√© mod√©r√©es avec 2 √©v√©nements priorit√© moyenne.
   
   üìà M√âTRIQUES OP√âRATIONNELLES :
      ‚Ä¢ √âv√©nements Totaux : 8
      ‚Ä¢ Heures de Pointe : 14:00, 18:00
   
   üí° RECOMMANDATIONS :
      ‚Ä¢ Augmenter la surveillance pendant les heures de pointe
      ‚Ä¢ R√©viser les protocoles de s√©curit√© pour la pr√©vention des vols

Int√©gration Streamlit
--------------------

.. function:: display_daily_report_section(manager)

   Composant UI Streamlit pour la g√©n√©ration et t√©l√©chargement de rapports.
   
   :param manager: Gestionnaire syst√®me avec attribut nlp_reporter

Usage dans la barre lat√©rale Streamlit :

.. code-block:: python

   with st.sidebar:
       display_daily_report_section(gestionnaire_surveillance)

Configuration
-------------

Le syst√®me de mots-cl√©s de menaces peut √™tre personnalis√© :

.. code-block:: python

   generator = NLPReportGenerator()
   
   # Ajouter des mots-cl√©s de menace personnalis√©s
   generator.threat_keywords['high_threat'].extend(['arme', 'violence'])
   generator.threat_keywords['medium_threat'].extend(['intrusion', 'fl√¢nerie'])

Bonnes Pratiques
----------------

1. **Enregistrement R√©gulier** : Enregistrer les √©v√©nements imm√©diatement pour des horodatages pr√©cis
2. **Types d'√âv√©nements Coh√©rents** : Utiliser des cat√©gories standardis√©es
3. **Descriptions D√©taill√©es** : Fournir des d√©tails sp√©cifiques pour une meilleure classification
4. **G√©n√©ration Quotidienne** : G√©n√©rer les rapports √† intervalles r√©guliers
5. **Archivage** : Sauvegarder les rapports pour analyse historique

D√©pendances
-----------

Packages Python requis :

.. code-block:: text

   datetime
   collections.defaultdict
   collections.Counter
   streamlit  # pour l'int√©gration UI

Gestion des Erreurs
-------------------

Le syst√®me inclut une gestion d'erreurs int√©gr√©e :

* **Aucun √âv√©nement** : Message appropri√© si aucun √©v√©nement enregistr√©
* **Horodatages Invalides** : Utilise l'heure actuelle par d√©faut
* **Analyse Vide** : G√®re les cas sans √©v√©nements correspondant aux crit√®res
* **Donn√©es Manquantes** : Traitement gracieux des attributs manquants

.. note::
   Ce syst√®me est con√ßu pour les applications de surveillance s√©curitaire. 
   Assurez-vous de la conformit√© avec les r√©glementations locales de confidentialit√©.

.. warning::
   Les menaces de haute priorit√© doivent d√©clencher une r√©vision manuelle imm√©diate 
   en plus de la g√©n√©ration automatique de rapports.
